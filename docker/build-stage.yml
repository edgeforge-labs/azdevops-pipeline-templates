# DO NOT USE - deprecated 
parameters:
  - name: ProjectName
    type: string
  - name: owner
    type: string
  - name: engieAssetPriority
    type: string
  - name: engieAssetClassification
    type: string
  - name: dockerfilePath
    type: string
    default: './Dockerfile'

variables:
  - group: JFROG-TOKEN # Variable group containing JFROG_USERNAME and JFROG_PASSWORD

stages:
  - stage: Container_Build_and_Publish
    displayName: "Build and Publish Docker Image"
    jobs:
      - job: Build_Container
        displayName: "Build and Push Docker Image"
        steps:
          - checkout: self
            clean: true
            fetchTags: true
            persistCredentials: true
            fetchDepth: 0
          - task: Docker@2
            displayName: Docker login
            inputs:
              command: login
              containerRegistry: bd989720-133a-4625-969f-b343870eb376
          - bash: |
              docker buildx inspect "${BUILDX_BUILDER}"
              if [[ "$?" != "0" ]]; then
                echo "Creating remote container configuration for buildx"
                docker buildx create --name "${BUILDX_BUILDER}" --driver remote tcp://buildkitd.alm.svc:1234
              fi
            displayName: Setup buildx
          - task: Bash@3
            displayName: Setup environment variables
            inputs:
              targetType: inline
              script: |
                imageTag=$(echo "$(Build.BuildNumber)" | tr "[:upper:]" "[:lower:]")
                echo "##vso[task.setvariable variable=imageTag]$imageTag"
                echo "$(jfrog-artifcatory-user):$(jfrog-artifcatory-secret)" > $(Build.ArtifactStagingDirectory)/jfrog_creds
          - task: Docker@2
            displayName: Build with tag $(Build.BuildNumber)
            inputs:
              command: build
              repository: "prd-docker-virtual/${{ parameters.ProjectName }}"
              tags: $(imageTag)
              dockerfile: '${{ parameters.dockerfilePath }}'
              buildContext: '$(System.DefaultWorkingDirectory)'
              arguments: |
                --build-arg IMAGE_NAME=${{ parameters.ProjectName }}
                --secret id=jfrog_creds,src=$(Build.ArtifactStagingDirectory)/jfrog_creds
                --push
            env:
              BUILDX_NO_DEFAULT_ATTESTATIONS: 1
          - task: JFrogPublishBuildInfo@1
            inputs:
              artifactoryConnection: 'JFrog'
              buildName: '$(Build.DefinitionName)'
              buildNumber: '$(Build.BuildNumber)'
              projectKey: 'prd'

