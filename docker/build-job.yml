parameters:
  - name: ProjectName
    type: string
  - name: owner
    type: string
  - name: engieAssetPriority
    type: string
  - name: engieAssetClassification
    type: string
  - name: dockerfilePath
    type: string
    default: './Dockerfile'
  - name: buildContext
    type: string
    default: '$(System.DefaultWorkingDirectory)'

jobs:
  - job: Build_Container
    displayName: "Build and Push Docker Image"
    variables:
      - group: JFROG-TOKEN # Variable group containing JFROG_USERNAME and JFROG_PASSWORD
    steps:
      - checkout: self
        clean: true
        fetchTags: true
        persistCredentials: true
        fetchDepth: 0
      - task: Docker@2
        displayName: Docker login
        inputs:
          command: login
          containerRegistry: bd989720-133a-4625-969f-b343870eb376
      - bash: |
          docker buildx inspect "${BUILDX_BUILDER}"
          if [[ "$?" != "0" ]]; then
            echo "Creating remote container configuration for buildx"
            docker buildx create --name "${BUILDX_BUILDER}" --driver remote tcp://buildkitd.alm.svc:1234
          fi
        displayName: Setup buildx
      - task: Bash@3
        displayName: Setup environment variables
        env:
          JFROG_USER: $(jfrog-artifactory-user)
          JFROG_PASSWORD: $(jfrog-artifactory-secret)
        inputs:
          targetType: inline
          script: |
            imageTag=$(echo "$(Build.BuildNumber)" | tr "[:upper:]" "[:lower:]")
            echo "##vso[task.setvariable variable=imageTag]$imageTag"
            echo "$JFROG_USER:$JFROG_PASSWORD" > $(Build.ArtifactStagingDirectory)/jfrog_creds
      - task: Docker@2
        displayName: Build image $(Build.BuildNumber)
        inputs:
          command: build
          repository: "prd-docker-virtual/${{ parameters.ProjectName }}"
          tags: $(imageTag) #, latest (check if this works, we are not allowed to delete artifacts in jfrog so overwriting could be an issue.)
          dockerfile: '${{ parameters.dockerfilePath }}'
          buildContext: '${{ parameters.buildContext }}'
          arguments: |
            --build-arg IMAGE_NAME=${{ parameters.ProjectName }}
            --build-arg imageTag=$(imageTag)
            --secret id=jfrog_creds,src=$(Build.ArtifactStagingDirectory)/jfrog_creds
            --push
        env:
          BUILDX_NO_DEFAULT_ATTESTATIONS: 1
      - task: JFrogPublishBuildInfo@1
        inputs:
          artifactoryConnection: 'JFrog'
          buildName: '$(Build.DefinitionName)'
          buildNumber: '$(Build.BuildNumber)'
          projectKey: 'prd'